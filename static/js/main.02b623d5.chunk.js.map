{"version":3,"sources":["components/TodoItem/TodoItem.tsx","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoItem","todo","selectedTodo","setSelectedTodo","className","id","completed","cn","title","type","onClick","TodoList","todos","map","TodoFilter","setFilter","setTitleFilter","useState","query","setQuery","onChange","event","selectedFilter","target","value","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","loading","setLoading","selectedUser","setSelectedUser","userId","useEffect","getUser","userFromServer","finally","href","name","App","setTodos","filter","titleFilter","visibleTodos","filterType","filterTodos","toLowerCase","includes","todosFromServer","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.02b623d5.chunk.js","sourcesContent":["import React from 'react';\nimport cn from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todo: Todo,\n  selectedTodo: Todo | null,\n  setSelectedTodo: (todo: Todo) => void,\n};\n\nexport const TodoItem: React.FC<Props> = ({\n  todo,\n  selectedTodo,\n  setSelectedTodo,\n}) => {\n  return (\n    <tr data-cy=\"todo\" key={todo.id}>\n      <td className=\"is-vcentered\">{todo.id}</td>\n\n      <td className=\"is-vcentered\">\n        {todo.completed && (\n          <span className=\"icon\" data-cy=\"iconCompleted\">\n            <i className=\"fas fa-check\" />\n          </span>\n        )}\n      </td>\n\n      <td className=\"is-vcentered is-expanded\">\n        <p className={cn({\n          'has-text-success': todo.completed,\n          'has-text-danger': !todo.completed,\n        })}\n        >\n          {todo.title}\n        </p>\n      </td>\n      <td className=\"has-text-right is-vcentered\">\n        <button\n          data-cy=\"selectButton\"\n          className=\"button\"\n          type=\"button\"\n          onClick={() => setSelectedTodo(todo)}\n        >\n          <span className=\"icon\">\n            <i className={cn(\n              'far',\n              {\n                'fa-eye': (selectedTodo && selectedTodo.id !== todo.id)\n                  || !selectedTodo,\n                'fa-eye-slash': selectedTodo\n                  && selectedTodo.id === todo.id,\n              },\n            )}\n            />\n          </span>\n        </button>\n      </td>\n    </tr>\n  );\n};\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { TodoItem } from '../TodoItem';\n\ntype Props = {\n  todos: Todo[],\n  selectedTodo: Todo | null,\n  setSelectedTodo: (todo: Todo) => void,\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  selectedTodo,\n  setSelectedTodo,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map(todo => (\n        <TodoItem\n          key={todo.id}\n          todo={todo}\n          selectedTodo={selectedTodo}\n          setSelectedTodo={setSelectedTodo}\n        />\n      ))}\n    </tbody>\n  </table>\n);\n","import React, { useState } from 'react';\n\ntype Props = {\n  setFilter: (filter: string) => void;\n  setTitleFilter: (filter: string) => void;\n};\n\nexport const TodoFilter: React.FC<Props> = ({ setFilter, setTitleFilter }) => {\n  const [query, setQuery] = useState('');\n\n  const handleQueryChange = (value: string) => {\n    setQuery(value);\n    setTitleFilter(value);\n  };\n\n  const clearQuery = () => {\n    setQuery('');\n    setTitleFilter('');\n  };\n\n  const handleSelectChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    const selectedFilter = event.target.value;\n\n    setFilter(selectedFilter);\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select data-cy=\"statusSelect\" onChange={handleSelectChange}>\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          value={query}\n          onChange={(event) => handleQueryChange(event.target.value)}\n          placeholder=\"Search...\"\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {query && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={clearQuery}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { getUser } from '../../api';\nimport { User } from '../../types/User';\n\ntype Props = {\n  todo: Todo,\n  setSelectedTodo: (todo: Todo | null) => void,\n};\n\nexport const TodoModal: React.FC<Props> = ({ todo, setSelectedTodo }) => {\n  const [loading, setLoading] = useState(false);\n  const [selectedUser, setSelectedUser] = useState<User | null>(null);\n\n  const {\n    id, title, completed, userId,\n  } = todo;\n\n  const handleCloseClick = () => {\n    setSelectedUser(null);\n    setSelectedTodo(null);\n  };\n\n  useEffect(() => {\n    setLoading(true);\n\n    getUser(userId)\n      .then(userFromServer => {\n        setSelectedUser(userFromServer);\n      })\n      .finally(() => setLoading(false));\n  }, [todo]);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {loading ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              Todo #\n              {id}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={handleCloseClick}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {completed ? (\n                <strong className=\"has-text-success\">Done</strong>)\n                : (\n                  <strong className=\"has-text-danger\">Planned</strong>)}\n\n              {' by '}\n\n              <a href=\"mailto:Sincere@april.biz\">\n                {selectedUser ? selectedUser.name : 'unknown'}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\nimport { getTodos } from './api';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [loading, setLoading] = useState(false);\n  const [filter, setFilter] = useState('all');\n  const [titleFilter, setTitleFilter] = useState('');\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n\n  function filterTodos(filterType: string): Todo[] {\n    switch (filterType) {\n      case 'active':\n        return todos.filter(todo => !todo.completed);\n\n      case 'completed':\n        return todos.filter(todo => todo.completed);\n\n      default:\n        return todos;\n    }\n  }\n\n  let visibleTodos = filterTodos(filter);\n\n  function filterByTitle(): Todo[] {\n    return visibleTodos.filter(todo => todo.title\n      .toLowerCase()\n      .includes(titleFilter.toLowerCase()));\n  }\n\n  visibleTodos = filterByTitle();\n\n  useEffect(() => {\n    setLoading(true);\n\n    getTodos()\n      .then(todosFromServer => {\n        setTodos(todosFromServer);\n      })\n      .finally(() => setLoading(false));\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                setFilter={setFilter}\n                setTitleFilter={setTitleFilter}\n              />\n            </div>\n\n            <div className=\"block\">\n              {loading && <Loader />}\n\n              {!loading && todos.length > 0\n                && (\n                  <TodoList\n                    todos={visibleTodos}\n                    selectedTodo={selectedTodo}\n                    setSelectedTodo={setSelectedTodo}\n                  />\n                )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && (\n        <TodoModal\n          todo={selectedTodo}\n          setSelectedTodo={setSelectedTodo}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\r\nimport { App } from './App';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}